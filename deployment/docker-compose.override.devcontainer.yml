version: '3.9'
services:
  db:
    volumes:
      - ./volumes/database:/opt/postgres/data
      - ./volumes/backups:/backups
    ports:
      - "${DATABASE_PORT:-7432}:5432"

  dbbackups:
    volumes:
      - ./volumes/backups:/backups

  worker:
    image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}_worker_dev
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: worker
    volumes:
      - ../:/home/web/project
      - ../django_project:/home/web/django_project
      - ./volumes/media:/home/web/media

  celery_beat:
    image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}_worker_dev
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: worker
    volumes:
      - ../:/home/web/project
      - ../django_project:/home/web/django_project

  dev:
    image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}_dev
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: vscode
    entrypoint: []
    volumes:
      - ../:/home/web/project
      - ./volumes/media:/home/web/media
      - ./volumes/static:/home/web/static

  minio:
    volumes:
      - ./volumes/minio_data:/data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      MINIO_USER: ${MINIO_ACCESS_KEY_ID:-miniocplus}
      MINIO_PASSWORD: ${MINIO_SECRET_ACCESS_KEY:-miniocplus}
      MINIO_BUCKET: ${MINIO_BUCKET_NAME:-cplus}
      MINIO_S3_BUCKET: ${AWS_S3_BUCKET_NAME:-cpluss3}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_USER} $${MINIO_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/$${MINIO_S3_BUCKET};
      /usr/bin/mc mb --ignore-existing myminio/$${MINIO_BUCKET};
      exit 0;
      "
