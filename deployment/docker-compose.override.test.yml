version: '3.9'
services:
  db:
    volumes:
      - ./volumes/database:/opt/postgres/data
      - ./volumes/backups:/backups
    ports:
      - "${DATABASE_PORT:-7432}:5432"

  worker:
    image: kartoza/cplus-api:test
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/media:/home/web/media
    links:
      - s3
      - minio

  dev:
    image: kartoza/cplus-api:test
    entrypoint: []
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
    links:
      - db
      - worker
    depends_on:
      - createbuckets
  
  minio:
    volumes:
      - ./volumes/minio_data:/data

  s3:
    image: quay.io/minio/minio:RELEASE.2024-03-30T09-41-56Z.fips
    command: minio server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minios3admin}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minios3admin}
    volumes:
      - ./volumes/s3_data:/data
    restart: always

  createbuckets:
    image: minio/mc
    depends_on:
      - s3
      - minio
    environment:
      MINIO_S3_USER: ${AWS_ACCESS_KEY_ID:-minios3admin}
      MINIO_S3_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minios3admin}
      MINIO_USER: ${MINIO_ACCESS_KEY_ID:-miniocplus}
      MINIO_PASSWORD: ${MINIO_SECRET_ACCESS_KEY:-miniocplus}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set s3minio http://s3:9000 $${MINIO_S3_USER} $${MINIO_S3_PASSWORD};
      /usr/bin/mc mb --ignore-existing s3minio/cplus;
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_USER} $${MINIO_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/cplus;
      exit 0;
      "
